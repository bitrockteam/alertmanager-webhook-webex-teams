---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: webex-receiver
  name: webex-receiver
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: webex-receiver
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: webex-receiver
    spec:
      containers:
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: webex-receiver
        ports:
          - containerPort: 9091
        env:
        - name: LOGLEVEL
          value: {{ .Values.loglevel }}
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: APP
          value: "webex"
        - name: WEBEX_TOKEN
          valueFrom:
            secretKeyRef:
              name: webex-receiver
              key: WEBEX_TOKEN
        - name: DEFAULT_WEBEX_ROOM
          value: {{ .Values.webex.default_room }}
        {{- range $room, $id := .Values.webex.rooms }}
        - name: WEBEX_ROOM_{{ $room | upper }}
        - value: {{ $id | b64enc | quote }}
        {{- end }}

        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
